import { Button, CheckBox, ComboBox, VerticalBox, CheckBox, StandardListView, Switch } from "std-widgets.slint";

export component PlotWindow inherits Window {
    in property <string> window_title;
    title: window_title;
}

export component AppWindow inherits Window {
    title: "LOFAR H5plot";
    min-width: 400px;
    min-height: 635px;
    default-font-family: "JetBrains Mono";
    default-font-size: 10pt;
    in-out property <StandardListViewItem> current_antenna;
    in property <[StandardListViewItem]> station_list;
    in property <[string]> solset_list;
    in property <[string]> soltab_list;
    in property <[string]> dir_list;
    in property <[string]> refant_list;

    callback plot();
    callback update_antenna(int);

    popup := PopupWindow {
        Rectangle { height:100%; width: 100%; background: yellow; }
        x: 20px; y: 20px; height: 50px; width: 50px;
    }

    VerticalLayout {
        padding: 5px;
        GridLayout {
            height: 30pt;
            Row {
                Text {
                    text: "Solset";
                    vertical-alignment: center;
                    horizontal-alignment: center;
                    col: 0;
                }
                ComboBox {
                    col: 1;
                    model: solset_list;
                }
            }
        }
        GridLayout {
            height: 30pt;
            Row {
                HorizontalLayout {
                    Text {
                        text: "Soltab";
                        vertical-alignment: center;
                    }
                    ComboBox {
                        model: soltab_list;
                    }
                    Text {
                        text: "vs";
                        vertical-alignment: center;
                        horizontal-alignment: center;
                    }
                    ComboBox {
                        model: ["time", "frequency", "waterfall"];
                    }
                }
            }
        }
        GridLayout {
            height: 30pt;
            Row {
                HorizontalLayout {
                    Text {
                        text: "Ref. ant.";
                        vertical-alignment: center;
                    }
                    ComboBox {
                        model: refant_list;
                    }
                    Text {
                        text: "Dir.";
                        vertical-alignment: center;
                        horizontal-alignment: center;
                    }
                    ComboBox {
                        model: dir_list;
                    }
                }
            }
        }
        GridLayout {
            height: 60pt;
            Row {
                GridLayout {
                    Row {
                        Switch {
                            col: 0;
                            text: "Plot weights";
                        }
                        CheckBox {
                            col: 1;
                            text: "Time diff.";
                        }
                    }
                    Row {
                        CheckBox {
                            col: 0;
                            text: "Pol. diff. (XX - YY)";
                        }
                        CheckBox {
                            col: 1;
                            text: "Frequency diff.";
                        }
                    }
                }
            }
        }
        Button {
            width: 100%;
            height: 30pt;
            text: "Plot";
            clicked => {
                root.plot();
            }
        }
        Button {
            width: 100%;
            height: 30pt;
            text: "Plot all stations";
        }
        Text {
            height: 15pt;
            padding-bottom: 0;
            text: "Stations:";
            vertical-alignment: center;
        }
        StandardListView {
            width: 100%;
            model: station_list;
            current-item-changed => {
                current_antenna = station_list[self.current-item];
            }
        }
    }
}

